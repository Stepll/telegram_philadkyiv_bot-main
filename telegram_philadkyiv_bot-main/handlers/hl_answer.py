from aiogram import types
from aiogram import Router

from filters.reply_filter import IsReplyFilter
from filters.chat_id_filter import ChatFilter
from filters.user_id_filter import UserFilter
from filters.whitelist_filter import WhiteList

from dispatcher import bot

from data import config
from mongo.messages import create_message, get_message

router = Router()

# –û–±—Ä–æ–±–ª—è—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –Ω–µ–∞–Ω–æ–Ω—ñ–º–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
@router.message(ChatFilter(chat_id=config.chat), IsReplyFilter('is_reply'), WhiteList(False))
@router.message(ChatFilter(chat_id=config.chat), IsReplyFilter('is_reply'), UserFilter(user_id=config.admin_ids), WhiteList(True))
async def answer(message: types.Message):

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±–∞–∑—ñ —Ç–∞ –≤–∏—Ç—è–≥—É—î–º–æ id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –¥–æ —è–∫–æ–≥–æ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ
    user_id = await get_message(message.reply_to_message.message_id)
    user_id = user_id['forward_from-id']

    try:
        await create_message(func='send_message',chat_id=user_id, text=message.text)
        await message.answer(text="üîπ–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ", reply_to_message_id=message.message_id)

    except: # –°–∫–æ—Ä—ñ—à –∑–∞ –≤—Å–µ –≤–∏–Ω–∏–∫–∞—î —á–µ—Ä–µ–∑ —Ç–µ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç
        await message.answer(text="üî∏–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –±—É–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", reply_to_message_id=message.message_id)
