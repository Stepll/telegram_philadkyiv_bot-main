from aiogram import types
from aiogram import Router

from filters.chat_type_filter import ChatTypeFilter
from filters.blocked_filter import Blocked

from mongo.messages import create_message
from mongo.users import check_user

from data import config

router = Router()


# –û–±—Ä–æ–±–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—ñ –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –≤ —á–∞—Ç
@router.message(ChatTypeFilter(chat_type=['private']), Blocked(False))
async def private(message: types.Message):
    await check_user(message)
    if config.ANONQUEST:
        await create_message(func='send_message', chat_id=config.chat, text=f'‚úâÔ∏è –ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è: \n{message.text}', forward=message)
    else:
        await create_message(func='forward_message', chat_id=config.chat, message_id=message.message_id, from_chat_id=message.chat.id, forward=message)
    
    await message.answer('üîπ–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ', reply_to_message_id=message.message_id)


# –ú–æ–∂–Ω–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ä–µ–∞–∫—Ü—ñ—é –±–æ—Ç–∞ –Ω–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@router.message(ChatTypeFilter(chat_type=['private']), Blocked(True))
async def private_blocked(message: types.Message):
    pass